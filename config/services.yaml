# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/"
    exclude:
      - "../src/DependencyInjection/"
      - "../src/Entity/"
      - "../src/Kernel.php"

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
  App\Serializer\UserContextBuilder:
    decorates: "api_platform.serializer.context_builder"
    arguments: ['@App\Serializer\UserContextBuilder.inner']

  app.token_authenticator:
    class: App\Security\TokenAuthenticator
    parent: lexik_jwt_authentication.security.jwt_authenticator

  App\EventListener\AuthenticationSuccessListener:
    tags:
      - {
          name: kernel.event_listener,
          event: lexik_jwt_authentication.on_authentication_success,
          method: onAuthenticationSuccessResponse,
        }

  App\Security\MercureTokenGenerator:
    arguments:
      $secret: "%env(MERCURE_JWT_SECRET)%"

  JoliCode\Elastically\IndexNameMapper:
    arguments:
      $prefix: null # or a string to prefix index name
      $indexClassMapping:
        prestation: App\Model\Prestation

  JoliCode\Elastically\Serializer\StaticContextBuilder:
    arguments:
      $mapping:
        App\Model\Prestation: [App\Entity\Prestation]

  JoliCode\Elastically\Mapping\YamlProvider:
    arguments:
      $configurationDirectory: "%kernel.project_dir%/config/elasticsearch"

  JoliCode\Elastically\ResultSetBuilder:
    arguments:
      $indexNameMapper: '@JoliCode\Elastically\IndexNameMapper'
      $contextBuilder: '@JoliCode\Elastically\Serializer\StaticContextBuilder'
      $denormalizer: "@serializer"
  JoliCode\Elastically\Transport\HttpClientTransport: ~
  JoliCode\Elastically\Client:
    arguments:
      $config:
        elastically_mappings_directory: "%kernel.project_dir%/config/elasticsearch"
        #host: "%env(ELASTICSEARCH_HOST)%"
        #port: "%env(ELASTICSEARCH_PORT)%"
        url: "%env(ELASTICSEARCH_URL)%"
        transport: '@JoliCode\Elastically\Transport\HttpClientTransport'
      $logger: "@logger"
      $resultSetBuilder: '@JoliCode\Elastically\ResultSetBuilder'
      $indexNameMapper: '@JoliCode\Elastically\IndexNameMapper'

  JoliCode\Elastically\Indexer:
    arguments:
      $client: '@JoliCode\Elastically\Client'
      $serializer: "@serializer"
      $bulkMaxSize: 100
      $bulkRequestParams: []
      $contextBuilder: '@JoliCode\Elastically\Serializer\StaticContextBuilder'

  JoliCode\Elastically\IndexBuilder:
    arguments:
      $mappingProvider: '@JoliCode\Elastically\Mapping\YamlProvider'
      $client: '@JoliCode\Elastically\Client'
      $indexNameMapper: '@JoliCode\Elastically\IndexNameMapper'
  JoliCode\Elastically\Messenger\IndexationRequestHandler: ~
  JoliCode\Elastically\Messenger\DocumentExchangerInterface:
    alias: App\Elasticsearch\DocumentExchanger
  App\Filter\SearchPrestationFilter:
    # The "arguments" key can be omitted if the autowiring is enabled
    arguments:
      $client: '@JoliCode\Elastically\Client'
  App\EventSubscriber\ElasticSubscriber:
    tags:
      - name: "doctrine.event_subscriber"

        # subscribers can define their priority in case multiple subscribers or listeners are associated
        # to the same event (default priority = 0; higher numbers = listener is run earlier)
        priority: 500

        # you can also restrict listeners to a specific Doctrine connection
        connection: "default"
  App\Services\StripeService:
    arguments: ["%env(STRIPE_KEY)%", "%env(DOMAIN)%", "%env(STRIPE_END_POINT)%"]
  App\Services\AwsService:
    arguments:
      [
        "%env(S3_KEY)%",
        "%env(S3_SECRET)%",
        "%env(S3_BUCKET)%",
        "%env(S3_REGION)%",
      ]
